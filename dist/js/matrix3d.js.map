{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./js/matrix3d.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BUFFER","ArrayBuffer","this","elements","Float64Array","core","stdlib","env","buffer","sin","Math","cos","sqrt","PI","HEAPF64","HEAP_TOP","cv","sv","f0","f1","f2","f3","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","e10","e11","e12","e13","e14","e15","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","i11","i12","i13","i14","i15","setIdentity","scale","x","y","z","translate","multiply","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","rotateZ","angle","rotateY","rotateX","rotate3d","rlen","nc","xy","yz","zx","xs","ys","zs","_loadElements","ft","mv","Matrix3DCore","Matrix3D","BOGUS_GLOBAL","STACK_TOP","valueOf","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","acos","asin","atan","tan","exp","log","ceil","floor","abs","min","max","atan2","pow","imul","fround","E","LN10","LN2","LOG2E","LOG10E","SQRT1_2","SQRT2"],"mappings":"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","file":"js/matrix3d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","//import BufferData from './buffer_data';\r\nimport { Matrix } from './interfaces';\r\nconst MAX_HEAP_SIZE = 8 * 16;\r\nconst STACK_SIZE = 0x10000;\r\nlet BUFFER: ArrayBuffer;\r\n\r\nclass Matrix3D implements Matrix {\r\n    static BOGUS_GLOBAL = {\r\n        //Accessing the heap\r\n        Int8Array: Int8Array,\r\n        Uint8Array: Uint8Array,\r\n        Int16Array: Int16Array,\r\n        Uint16Array: Uint16Array,\r\n        Int32Array: Int32Array,\r\n        Uint32Array: Uint32Array,\r\n        Float32Array: Float32Array,\r\n        Float64Array: Float64Array,\r\n        Math: {\r\n            //Functions\t\r\n            acos: Math.acos,\r\n            asin: Math.asin,\r\n            atan: Math.atan,\r\n            cos: Math.cos,\r\n            sin: Math.sin,\r\n            tan: Math.tan,\r\n            exp: Math.exp,\r\n            log: Math.log,\r\n\r\n            ceil: Math.ceil,\r\n            floor: Math.floor,\r\n            sqrt: Math.sqrt,\r\n\r\n            abs: Math.abs,\r\n\r\n            min: Math.min,\r\n            max: Math.max,\r\n\r\n            atan2: Math.atan2,\r\n            pow: Math.pow,\r\n\r\n            imul: Math.imul,\r\n\r\n            fround: Math.fround,\r\n\r\n            //Constants\r\n            E: Math.E,\r\n            LN10: Math.LN10,\r\n            LN2: Math.LN2,\r\n            LOG2E: Math.LOG2E,\r\n            LOG10E: Math.LOG10E,\r\n            PI: Math.PI,\r\n            SQRT1_2: Math.SQRT1_2,\r\n            SQRT2: Math.SQRT2\r\n        }\r\n    }\r\n    elements;\r\n    constructor() {\r\n        if (!BUFFER) {\r\n            BUFFER = new ArrayBuffer(STACK_SIZE);\r\n        }\r\n        //this.bufferData = BufferData.malloc(MAX_HEAP_SIZE);\r\n        this.elements = new Float64Array(BUFFER, 0, 16);\r\n        var core = Matrix3DCore(\r\n            Matrix3D.BOGUS_GLOBAL, {\r\n            STACK_TOP: STACK_SIZE,\r\n            HEAP_TOP: 0\r\n        },\r\n            BUFFER\r\n        );\r\n        for (var name in core) {\r\n            this[name] = core[name];\r\n        }\r\n        /*if (this.bufferData.heaptop > 0) {\r\n            (this as any)._setHeapTop(this.bufferData.heaptop);\r\n        }\r\n        if (typeof (this as any)._heapSize === \"function\") {\r\n            this.bufferData.heaptop += (this as any)._heapSize();\r\n        }*/\r\n    }\r\n    valueOf() {\r\n        let HEAPF64 = this.elements;\r\n        (this as any)._loadElements();\r\n        //return \"matrix3d(\" + HEAPF64.join(\",\") + \")\";\r\n        return (\r\n            \"matrix3d(\" +\r\n            HEAPF64[0] +\r\n            \",\" +\r\n            HEAPF64[1] +\r\n            \",\" +\r\n            HEAPF64[2] +\r\n            \",\" +\r\n            HEAPF64[3] +\r\n            \",\" +\r\n            HEAPF64[4] +\r\n            \",\" +\r\n            HEAPF64[5] +\r\n            \",\" +\r\n            HEAPF64[6] +\r\n            \",\" +\r\n            HEAPF64[7] +\r\n            \",\" +\r\n            HEAPF64[8] +\r\n            \",\" +\r\n            HEAPF64[9] +\r\n            \",\" +\r\n            HEAPF64[10] +\r\n            \",\" +\r\n            HEAPF64[11] +\r\n            \",\" +\r\n            HEAPF64[12] +\r\n            \",\" +\r\n            HEAPF64[13] +\r\n            \",\" +\r\n            HEAPF64[14] +\r\n            \",\" +\r\n            HEAPF64[15] +\r\n            \")\"\r\n        );\r\n\r\n\r\n        /* \r\n        \r\n        return \"matrix3d(\" + HEAPF64.join(\",\") + \")\";\r\n        return String.prototype.concat.call(\r\n             \"matrix3d(\",\r\n             HEAPF64[0],\r\n             \",\",\r\n             HEAPF64[1],\r\n             \",\",\r\n             HEAPF64[2],\r\n             \",\",\r\n             HEAPF64[3],\r\n             \",\",\r\n             HEAPF64[4],\r\n             \",\",\r\n             HEAPF64[5],\r\n             \",\",\r\n             HEAPF64[6],\r\n             \",\",\r\n             HEAPF64[7],\r\n             \",\",\r\n             HEAPF64[8],\r\n             \",\",\r\n             HEAPF64[9],\r\n             \",\",\r\n             HEAPF64[10],\r\n             \",\",\r\n             HEAPF64[11],\r\n             \",\",\r\n             HEAPF64[12],\r\n             \",\",\r\n             HEAPF64[13],\r\n             \",\",\r\n             HEAPF64[14],\r\n             \",\",\r\n             HEAPF64[15],\r\n             \")\"\r\n         );\r\n         \r\n         */\r\n    }\r\n\r\n\r\n}\r\n\r\n//'almost asm';\r\nfunction Matrix3DCore(stdlib, env, buffer) {\r\n    \"use asm\";\r\n    var sin = stdlib.Math.sin;\r\n    var cos = stdlib.Math.cos;\r\n    var sqrt = stdlib.Math.sqrt;\r\n    var PI = stdlib.Math.PI;\r\n    var HEAPF64 = new stdlib.Float64Array(buffer);\r\n    /*\r\n    var HEAP32=new stdlib.Int32Array(buffer);\r\n    var STACK_TOP = env.STACK_TOP | 0;*/\r\n    var HEAP_TOP = env.HEAP_TOP | 0;\r\n\r\n\r\n\r\n    var cv = 0.0,\r\n        sv = 0.0;\r\n\r\n    var f0 = 0.0,\r\n        f1 = 0.0,\r\n        f2 = 0.0,\r\n        f3 = 0.0;\r\n\r\n    var e0 = 0.0,\r\n        e1 = 0.0,\r\n        e2 = 0.0,\r\n        e3 = 0.0,\r\n        e4 = 0.0,\r\n        e5 = 0.0,\r\n        e6 = 0.0,\r\n        e7 = 0.0,\r\n        e8 = 0.0,\r\n        e9 = 0.0,\r\n        e10 = 0.0,\r\n        e11 = 0.0,\r\n        e12 = 0.0,\r\n        e13 = 0.0,\r\n        e14 = 0.0,\r\n        e15 = 0.0;\r\n\r\n    var i0 = 0,\r\n        i1 = 8,\r\n        i2 = 16,\r\n        i3 = 24,\r\n        i4 = 32,\r\n        i5 = 40,\r\n        i6 = 48,\r\n        i7 = 56,\r\n        i8 = 64,\r\n        i9 = 72,\r\n        i10 = 80,\r\n        i11 = 88,\r\n        i12 = 96,\r\n        i13 = 104,\r\n        i14 = 112,\r\n        i15 = 120;\r\n\r\n\r\n\r\n\r\n\r\n    function setIdentity() {\r\n        e0 = e5 = e10 = e15 = 1.0;\r\n        e4 = e8 = e12 = e1 = e9 = e13 = e2 = e6 = e14 = e3 = e7 = e11 = 0.0;\r\n    }\r\n\r\n    function scale(x: number, y: number, z: number) {\r\n        x = +x;\r\n        y = +y;\r\n        z = +z;\r\n        e0 = e0 * x;\r\n        e4 = e4 * y;\r\n        e8 = e8 * z;\r\n        e1 = e1 * x;\r\n        e5 = e5 * y;\r\n        e9 = e9 * z;\r\n        e2 = e2 * x;\r\n        e6 = e6 * y;\r\n        e10 = e10 * z;\r\n        e3 = e3 * x;\r\n        e7 = e7 * y;\r\n        e11 = e11 * z;\r\n    }\r\n\r\n    function translate(x: number, y: number, z: number) {\r\n        x = +x;\r\n        y = +y;\r\n        z = +z;\r\n        e12 = e12 + e0 * x + e4 * y + e8 * z;\r\n        e13 = e13 + e1 * x + e5 * y + e9 * z;\r\n        e14 = e14 + e2 * x + e6 * y + e10 * z;\r\n        e15 = e15 + e3 * x + e7 * y + e11 * z;\r\n    }\r\n\r\n    function multiply() {\r\n        var t0 = 0.0,\r\n            t1 = 0.0,\r\n            t2 = 0.0,\r\n            t3 = 0.0,\r\n            t4 = 0.0,\r\n            t5 = 0.0,\r\n            t6 = 0.0,\r\n            t7 = 0.0,\r\n            t8 = 0.0,\r\n            t9 = 0.0,\r\n            t10 = 0.0,\r\n            t11 = 0.0,\r\n            t12 = 0.0,\r\n            t13 = 0.0,\r\n            t14 = 0.0,\r\n            t15 = 0.0;\r\n\r\n        t0 = +HEAPF64[i0 >> 3], t1 = +HEAPF64[i1 >> 3], t2 = +HEAPF64[i2 >> 3], t3 = +HEAPF64[i3 >> 3];\r\n        t4 = +HEAPF64[i4 >> 3], t5 = +HEAPF64[i5 >> 3], t6 = +HEAPF64[i6 >> 3], t7 = +HEAPF64[i7 >> 3];\r\n        t8 = +HEAPF64[i8 >> 3], t9 = +HEAPF64[i9 >> 3], t10 = +HEAPF64[i10 >> 3], t11 = +HEAPF64[i11 >> 3];\r\n        t12 = +HEAPF64[i12 >> 3], t13 = +HEAPF64[i13 >> 3], t14 = +HEAPF64[i14 >> 3], t15 = +HEAPF64[i15 >> 3];\r\n\r\n        f0 = e0, f1 = e4, f2 = e8, f3 = e12;\r\n        e0 = f0 * t0 + f1 * t1 + f2 * t2 + f3 * t3;\r\n        e4 = f0 * t4 + f1 * t5 + f2 * t6 + f3 * t7;\r\n        e8 = f0 * t8 + f1 * t9 + f2 * t10 + f3 * t11;\r\n        e12 = f0 * t12 + f1 * t13 + f2 * t14 + f3 * t15;\r\n\r\n\r\n        f0 = e1, f1 = e5, f2 = e9, f3 = e13;\r\n        e1 = f0 * t0 + f1 * t1 + f2 * t2 + f3 * t3;\r\n        e5 = f0 * t4 + f1 * t5 + f2 * t6 + f3 * t7;\r\n        e9 = f0 * t8 + f1 * t9 + f2 * t10 + f3 * t11;\r\n        e13 = f0 * t12 + f1 * t13 + f2 * t14 + f3 * t15;\r\n\r\n\r\n        f0 = e2, f1 = e6, f2 = e10, f3 = e14;\r\n        e2 = f0 * t0 + f1 * t1 + f2 * t2 + f3 * t3;\r\n        e6 = f0 * t4 + f1 * t5 + f2 * t6 + f3 * t7;\r\n        e10 = f0 * t8 + f1 * t9 + f2 * t10 + f3 * t11;\r\n        e14 = f0 * t12 + f1 * t13 + f2 * t14 + f3 * t15;\r\n\r\n\r\n        f0 = e3, f1 = e7, f2 = e11, f3 = e15;\r\n        e3 = f0 * t0 + f1 * t1 + f2 * t2 + f3 * t3;\r\n        e7 = f0 * t4 + f1 * t5 + f2 * t6 + f3 * t7;\r\n        e11 = f0 * t8 + f1 * t9 + f2 * t10 + f3 * t11;\r\n        e15 = f0 * t12 + f1 * t13 + f2 * t14 + f3 * t15;\r\n    }\r\n\r\n    function rotateZ(angle: number) {\r\n        angle = +angle;\r\n        angle = (PI * +angle) / 180.0;\r\n        cv = cos(angle), sv = sin(angle);\r\n        f0 = e0, f1 = e1, f2 = e2, f3 = e3;\r\n\r\n        e0 = f0 * cv + e4 * sv;\r\n        e1 = f1 * cv + e5 * sv;\r\n        e2 = f2 * cv + e6 * sv;\r\n        e3 = f3 * cv + e7 * sv;\r\n        e4 = f0 * -sv + e4 * cv;\r\n        e5 = f1 * -sv + e5 * cv;\r\n        e6 = f2 * -sv + e6 * cv;\r\n        e7 = f3 * -sv + e7 * cv;\r\n    }\r\n\r\n    function rotateY(angle: number) {\r\n        angle = +angle;\r\n        angle = (PI * angle) / 180.0;\r\n        cv = cos(angle), sv = sin(angle);\r\n        f0 = e0, f1 = e1, f2 = e2, f3 = e3;\r\n        e0 = f0 * cv + e8 * -sv;\r\n        e1 = f1 * cv + e9 * -sv;\r\n        e2 = f2 * cv + e10 * -sv;\r\n        e3 = f3 * cv + e11 * -sv;\r\n        e8 = f0 * sv + e8 * cv;\r\n        e9 = f1 * sv + e9 * cv;\r\n        e10 = f2 * sv + e10 * cv;\r\n        e11 = f3 * sv + e11 * cv;\r\n    }\r\n\r\n    function rotateX(angle: number) {\r\n        angle = +angle;\r\n        angle = (PI * angle) / 180.0;\r\n        cv = cos(angle), sv = sin(angle);\r\n        f0 = e4, f1 = e5, f2 = e6, f3 = e7;\r\n\r\n        e4 = e4 * cv + e8 * sv;\r\n        e5 = e5 * cv + e9 * sv;\r\n        e6 = e6 * cv + e10 * sv;\r\n        e7 = e7 * cv + e11 * sv;\r\n        e8 = f0 * -sv + e8 * cv;\r\n        e9 = f1 * -sv + e9 * cv;\r\n        e10 = f2 * -sv + e10 * cv;\r\n        e11 = f3 * -sv + e11 * cv;\r\n    }\r\n    function rotate3d(x: number, y: number, z: number, angle: number) {\r\n        x = +x;\r\n        y = +y;\r\n        z = +z;\r\n        angle = +angle;\r\n        var s = 0.0,\r\n            c = 0.0,\r\n            rlen = 0.0,\r\n            nc = 0.0,\r\n            xy = 0.0,\r\n            yz = 0.0,\r\n            zx = 0.0,\r\n            xs = 0.0,\r\n            ys = 0.0,\r\n            zs = 0.0;\r\n\r\n        angle = (PI * angle) / 180.0;\r\n        s = sin(angle), c = cos(angle);\r\n\r\n        rlen = 1.0 / sqrt(x * x + y * y + z * z);\r\n        x = x * rlen;\r\n        y = y * rlen;\r\n        z = z * rlen;\r\n\r\n        nc = 1.0 - c;\r\n        xy = x * y;\r\n        yz = y * z;\r\n        zx = z * x;\r\n        xs = x * s;\r\n        ys = y * s;\r\n        zs = z * s;\r\n        HEAPF64[i0 >> 3] = x * x * nc + c;\r\n        HEAPF64[i1 >> 3] = xy * nc + zs;\r\n        HEAPF64[i2 >> 3] = zx * nc - ys;\r\n        HEAPF64[i3 >> 3] = 0.0;\r\n        HEAPF64[i4 >> 3] = xy * nc - zs;\r\n        HEAPF64[i5 >> 3] = y * y * nc + c;\r\n        HEAPF64[i6 >> 3] = yz * nc + xs;\r\n        HEAPF64[i7 >> 3] = 0.0;\r\n        HEAPF64[i8 >> 3] = zx * nc + ys;\r\n        HEAPF64[i9 >> 3] = yz * nc - xs;\r\n        HEAPF64[i10 >> 3] = z * z * nc + c;\r\n        HEAPF64[i11 >> 3] = 0.0;\r\n        HEAPF64[i12 >> 3] = 0.0;\r\n        HEAPF64[i13 >> 3] = 0.0;\r\n        HEAPF64[i14 >> 3] = 0.0;\r\n        HEAPF64[i15 >> 3] = 1.0;\r\n        multiply();\r\n    }\r\n\r\n    function _loadElements() {\r\n        var ft = 10000.0,\r\n            mv = 6755399441055744.0;\r\n\r\n        HEAPF64[i0 >> 3] = (e0 * ft + mv - mv) / ft;\r\n        HEAPF64[i1 >> 3] = (e1 * ft + mv - mv) / ft;\r\n        HEAPF64[i2 >> 3] = (e2 * ft + mv - mv) / ft;\r\n        HEAPF64[i3 >> 3] = (e3 * ft + mv - mv) / ft;\r\n        HEAPF64[i4 >> 3] = (e4 * ft + mv - mv) / ft;\r\n        HEAPF64[i5 >> 3] = (e5 * ft + mv - mv) / ft;\r\n        HEAPF64[i6 >> 3] = (e6 * ft + mv - mv) / ft;\r\n        HEAPF64[i7 >> 3] = (e7 * ft + mv - mv) / ft;\r\n        HEAPF64[i8 >> 3] = (e8 * ft + mv - mv) / ft;\r\n        HEAPF64[i9 >> 3] = (e9 * ft + mv - mv) / ft;\r\n        HEAPF64[i10 >> 3] = (e10 * ft + mv - mv) / ft;\r\n        HEAPF64[i11 >> 3] = (e11 * ft + mv - mv) / ft;\r\n        HEAPF64[i12 >> 3] = (e12 * ft + mv - mv) / ft;\r\n        HEAPF64[i13 >> 3] = (e13 * ft + mv - mv) / ft;\r\n        HEAPF64[i14 >> 3] = (e14 * ft + mv - mv) / ft;\r\n        HEAPF64[i15 >> 3] = (e15 * ft + mv - mv) / ft;\r\n\r\n        /*HEAPF64[i0 >> 3] = +(~~(e0 * 10000.0)) / 10000.0;\r\n        HEAPF64[i1 >> 3] = +(~~(e1 * 10000.0)) / 10000.0;\r\n        HEAPF64[i2 >> 3] = +(~~(e2 * 10000.0)) / 10000.0;\r\n        HEAPF64[i3 >> 3] = +(~~(e3 * 10000.0)) / 10000.0;\r\n        HEAPF64[i4 >> 3] = +(~~(e4 * 10000.0)) / 10000.0;\r\n        HEAPF64[i5 >> 3] = +(~~(e5 * 10000.0)) / 10000.0;\r\n        HEAPF64[i6 >> 3] = +(~~(e6 * 10000.0)) / 10000.0;\r\n        HEAPF64[i7 >> 3] = +(~~(e7 * 10000.0)) / 10000.0;\r\n        HEAPF64[i8 >> 3] = +(~~(e8 * 10000.0)) / 10000.0;\r\n        HEAPF64[i9 >> 3] = +(~~(e9 * 10000.0)) / 10000.0;\r\n        HEAPF64[i10 >> 3] = +(~~(e10 * 10000.0)) / 10000.0;\r\n        HEAPF64[i11 >> 3] = +(~~(e11 * 10000.0)) / 10000.0;\r\n        HEAPF64[i12 >> 3] = +(~~(e12 * 10000.0)) / 10000.0;\r\n        HEAPF64[i13 >> 3] = +(~~(e13 * 10000.0)) / 10000.0;\r\n        HEAPF64[i14 >> 3] = +(~~(e14 * 10000.0)) / 10000.0;\r\n        HEAPF64[i15 >> 3] = +(~~(e15 * 10000.0)) / 10000.0;*/\r\n        /*HEAPF64[i0 >> 3] = e0;\r\n        HEAPF64[i1 >> 3] = e1;\r\n        HEAPF64[i2 >> 3] = e2;\r\n        HEAPF64[i3 >> 3] = e3;\r\n        HEAPF64[i4 >> 3] = e4;\r\n        HEAPF64[i5 >> 3] = e5;\r\n        HEAPF64[i6 >> 3] = e6;\r\n        HEAPF64[i7 >> 3] = e7;\r\n        HEAPF64[i8 >> 3] = e8;\r\n        HEAPF64[i9 >> 3] = e9;\r\n        HEAPF64[i10 >> 3] = e10;\r\n        HEAPF64[i11 >> 3] = e11;\r\n        HEAPF64[i12 >> 3] = e12;\r\n        HEAPF64[i13 >> 3] = e13;\r\n        HEAPF64[i14 >> 3] = e14;\r\n        HEAPF64[i15 >> 3] = e15;*/\r\n    }\r\n   \r\n    /*function _setHeapTop(offset: number) {\r\n        offset = offset | 0;\r\n        HEAP_TOP = offset;\r\n        i0 = HEAP_TOP + 0 | 0;\r\n        i1 = HEAP_TOP + 8 | 0;\r\n        i2 = HEAP_TOP + 16 | 0;\r\n        i3 = HEAP_TOP + 24 | 0;\r\n        i4 = HEAP_TOP + 32 | 0;\r\n        i5 = HEAP_TOP + 40 | 0;\r\n        i6 = HEAP_TOP + 48 | 0;\r\n        i7 = HEAP_TOP + 56 | 0;\r\n        i8 = HEAP_TOP + 64 | 0;\r\n        i9 = HEAP_TOP + 72 | 0;\r\n        i10 = HEAP_TOP + 80 | 0;\r\n        i11 = HEAP_TOP + 88 | 0;\r\n        i12 = HEAP_TOP + 96 | 0;\r\n        i13 = HEAP_TOP + 104 | 0;\r\n        i14 = HEAP_TOP + 112 | 0;\r\n        i15 = HEAP_TOP + 120 | 0;\r\n    }*/\r\n\r\n    /*function _heapSize() {\r\n        return 8 * 16 | 0;\r\n    }*/\r\n\r\n    return {\r\n        //_heapSize,\r\n        //_setHeapTop,\r\n        setIdentity,\r\n        scale,\r\n        translate,\r\n        multiply,\r\n        rotateZ,\r\n        rotateY,\r\n        rotateX,\r\n        rotate3d,\r\n        _loadElements\r\n    };\r\n}\r\n\r\nexport default Matrix3D;"],"sourceRoot":""}